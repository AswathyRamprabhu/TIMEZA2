<%- include('../layouts/adminHeader.ejs') %>

  <section class=" gradient-custom">
    <div class="content-header">
      <div class="container py-5 h-100">
        <div class="row justify-content-center align-items-center h-100">
          <div class="col-12 col-lg-9 col-xl-7">
            <div class="card shadow-2-strong card-registration" style="border-radius: 15px">

              <div class="card-body p-4 p-md-5">
                <h3 class="mb-4 pb-2 pb-md-0 mb-md-5">Edit category</h3>
                <form id="categoryform" action="/admin/admineditcategory" method="POST">

                  <div class="row">
                    <div class="col-md-6 mb-4">
                      <input name="id" value="<%= category._id %>" hidden>
                      <div class="form-outline">
                        <label class="form-label" for="categoryname"> Category Name </label>
                        <input type="text" id="categoryname" class="form-control form-control-lg" name="categoryname"
                          value="<%= category.categoryname %>" />
                        <span class="error-message" id="categoryname-error"></span>
                      </div>
                    </div>
                    <div class="col-md-6 mb-4">
                      <div class="form-outline">
                        <label class="form-label" for="description">Category description</label>
                        <input type="text" id="description" class="form-control form-control-lg" name="description"
                          value="<%= category.description %>" />
                        <span class="error-message" id="description-error"></span>

                      </div>
                    </div>
                  </div>
                  <div class="col-md-6 mb-4">
                    <div class="form-outline">
                      <label class="form-label" for="offerPercentage">Offer Percentage</label>
                      <input type="number" class="form-control form-control-lg" id="offerPercentage"
                        name="offerPercentage" value="<%= category.offerPercentage %>" />
                      <span class="error-message" id="offerPercentage-error"></span>

                    </div>
                  </div>


                  <div class="col-12">
                    <select class="select form-control-lg" name="status">
                      <option value="Listed" <%=category.status==='Listed' ? 'selected' : '' %>>Listed</option>
                      <option value="Delisted" <%=category.status==='Delisted' ? 'selected' : '' %>>Delisted</option>
                    </select>
                  </div>

                  <div class="row">
                    <div class="col-md-6 mb-4 d-flex align-items-center"></div>
                  </div>


                  <div class="row">
                  </div>

                  <div class="mt-4 pt-2">
                    <button class="btn btn-primary btn-lg" type="submit"> Update category</button>
                  </div>
                </form>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>


  <%- include('../layouts/adminFooter.ejs') %>

    <script>
      document.addEventListener('DOMContentLoaded', function () {
        const categoryForm = document.getElementById('categoryform');
        const categorynameInput = document.querySelector('input[name="categoryname"]');
        const categorynameError = document.getElementById('categoryname-error');
        const descriptionInput = document.querySelector('input[name="description"]');
        const descriptionError = document.getElementById('description-error');
        const offerPercentageInput = document.querySelector('input[name="offerPercentage"]');
        const offerPercentageError = document.getElementById('offerPercentage-error');

        categoryForm.addEventListener('submit', function (event) {
          // Check if any field is empty and validate
          let isValid = true; // Add this flag to track overall form validity

          if (!isValidCategoryName(categorynameInput.value)) {
            categorynameError.textContent = 'Invalid input';
            categorynameError.style.display = 'block';
            isValid = false;
          } else {
            categorynameError.style.display = 'none'; // Corrected the typo here
          }

          if (!isValidDescription(descriptionInput.value)) {
            descriptionError.textContent = 'Invalid input';
            descriptionError.style.display = 'block';
            isValid = false;
          } else {
            descriptionError.style.display = 'none'; // Corrected the typo here
          }

          if (!isValidOfferPercentage(offerPercentageInput.value)) {
            offerPercentageError.textContent = 'Invalid input';
            offerPercentageError.style.display = 'block';
            isValid = false;
          } else {
            offerPercentageError.style.display = 'none'; // Corrected the typo here
          }


          // Prevent form submission if any field is invalid
          if (!isValid) {
            event.preventDefault(); // Prevent form submission
          }
        });

        function isValidCategoryName(categoryname) {
          const categorynamePattern = /^[A-Za-z\s]{1,15}$/;
          return categorynamePattern.test(categoryname);
        }

        function isValidDescription(description) {
          // Check if the input is not empty and contains the allowed characters
          const descriptionPattern = /^[A-Za-z0-9\s!@#$%^&*()_+-=,.<>;:'"\\/{}[\]]*$/;
          return description.trim() !== '' && descriptionPattern.test(description);
        }


        function isValidOfferPercentage(offerPercentage) {
          // Check if the input is not empty and contains only numbers
          if (offerPercentage.trim() === '') {
            return false;
          }

          // Parse the input as a floating-point number
          const parsedPercentage = parseFloat(offerPercentage);

          // Check if it's a number, greater than or equal to 0, and less than or equal to 50
          return !isNaN(parsedPercentage) && parsedPercentage >= 0 && parsedPercentage <= 50;
        }
      });

    </script>

    <style>
      .error-message {
        color: red;
        display: none;
      }
    </style>